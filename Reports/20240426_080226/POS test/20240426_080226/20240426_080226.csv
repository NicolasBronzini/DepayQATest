Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
POS test,,,,26-04-2024 08:02:34,26-04-2024 08:02:57,22.353s,PASSED
,,,,,,,
Test Cases/Flow POS/1 auth_token_Admin,,,,26-04-2024 08:02:35,26-04-2024 08:02:41,5.627s,PASSED
"current_user = ""Hasar""",,,,26-04-2024 08:02:35,26-04-2024 08:02:36,0.895s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,26-04-2024 08:02:36,26-04-2024 08:02:40,3.903s,PASSED
responseBody = response.getResponseText(),,,,26-04-2024 08:02:40,26-04-2024 08:02:40,0.065s,PASSED
print(responseBody),,,,26-04-2024 08:02:40,26-04-2024 08:02:40,0.042s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,26-04-2024 08:02:40,26-04-2024 08:02:40,0.042s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,26-04-2024 08:02:40,26-04-2024 08:02:40,0.066s,PASSED
token = accessToken,,,,26-04-2024 08:02:40,26-04-2024 08:02:40,0.030s,PASSED
"println(""Response Body: "" + responseBody)",,,,26-04-2024 08:02:40,26-04-2024 08:02:40,0.032s,PASSED
,,,,,,,
Test Cases/Flow POS/2 Client create,,,,26-04-2024 08:02:41,26-04-2024 08:02:42,1.500s,PASSED
uniqueId = randomUUID().toString(),,,,26-04-2024 08:02:41,26-04-2024 08:02:41,0.011s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,26-04-2024 08:02:41,26-04-2024 08:02:41,0.009s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,26-04-2024 08:02:41,26-04-2024 08:02:41,0.047s,PASSED
println(uniqueId: $uniqueId),,,,26-04-2024 08:02:41,26-04-2024 08:02:41,0.005s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""phone"": ""22222"",
  ""company"": ""Depay"",
""depay_fee"":""0.04"",
  ""external_reference"": ""Depay""
}
",,,,26-04-2024 08:02:41,26-04-2024 08:02:41,0.002s,PASSED
try,,,,26-04-2024 08:02:41,26-04-2024 08:02:42,0.964s,PASSED
,,,,,,,
Test Cases/Flow POS/3 Create Customer,,,,26-04-2024 08:02:42,26-04-2024 08:02:43,1.366s,PASSED
uniqueId = randomUUID().toString(),,,,26-04-2024 08:02:43,26-04-2024 08:02:43,0.006s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,26-04-2024 08:02:43,26-04-2024 08:02:43,0.004s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,26-04-2024 08:02:43,26-04-2024 08:02:43,0.003s,PASSED
println(uniqueId: $uniqueId),,,,26-04-2024 08:02:43,26-04-2024 08:02:43,0.004s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest$uniqueIdSubstring"",
""depay_fee"":""0.04"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,26-04-2024 08:02:43,26-04-2024 08:02:43,0.002s,PASSED
try,,,,26-04-2024 08:02:43,26-04-2024 08:02:43,0.909s,PASSED
,,,,,,,
Test Cases/Flow POS/4 Create User tipo User,,,,26-04-2024 08:02:43,26-04-2024 08:02:45,1.442s,PASSED
uniqueId = randomUUID().toString(),,,,26-04-2024 08:02:44,26-04-2024 08:02:44,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,26-04-2024 08:02:44,26-04-2024 08:02:44,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,26-04-2024 08:02:44,26-04-2024 08:02:44,0.001s,PASSED
println(uniqueId: $uniqueId),,,,26-04-2024 08:02:44,26-04-2024 08:02:44,0.001s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,26-04-2024 08:02:44,26-04-2024 08:02:44,0.001s,PASSED
try,,,,26-04-2024 08:02:44,26-04-2024 08:02:45,1.051s,PASSED
,,,,,,,
Test Cases/Flow POS/5 auth_token_User,,,,26-04-2024 08:02:45,26-04-2024 08:02:46,1.196s,PASSED
"current_user = ""Hasar""",,,,26-04-2024 08:02:45,26-04-2024 08:02:45,0.001s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_pos]))",,,,26-04-2024 08:02:45,26-04-2024 08:02:46,1.063s,PASSED
responseBody = response.getResponseText(),,,,26-04-2024 08:02:46,26-04-2024 08:02:46,0.002s,PASSED
print(responseBody),,,,26-04-2024 08:02:46,26-04-2024 08:02:46,0.002s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,26-04-2024 08:02:46,26-04-2024 08:02:46,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,26-04-2024 08:02:46,26-04-2024 08:02:46,0.001s,PASSED
token_user = accessToken,,,,26-04-2024 08:02:46,26-04-2024 08:02:46,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,26-04-2024 08:02:46,26-04-2024 08:02:46,0.001s,PASSED
,,,,,,,
Test Cases/Flow POS/6 Get Access_Token,,,,26-04-2024 08:02:46,26-04-2024 08:02:47,1.135s,PASSED
try,,,,26-04-2024 08:02:46,26-04-2024 08:02:47,0.897s,PASSED
,,,,,,,
Test Cases/Flow POS/7 Create Store,,,,26-04-2024 08:02:47,26-04-2024 08:02:48,0.993s,PASSED
"requestBody = ""
{
""store"": {
        ""description"": ""TestQA"",
        ""external_reference"": ""TEST QA"",
        ""address"": ""TestQA"",
        ""phone"": ""11111111111"",
        ""manager"": ""TestQA""
    }
}
""",,,,26-04-2024 08:02:47,26-04-2024 08:02:47,0.001s,PASSED
try,,,,26-04-2024 08:02:47,26-04-2024 08:02:48,0.827s,PASSED
,,,,,,,
Test Cases/Flow POS/8 Create POS,,,,26-04-2024 08:02:48,26-04-2024 08:02:49,1.220s,PASSED
uniqueId = randomUUID().toString(),,,,26-04-2024 08:02:49,26-04-2024 08:02:49,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,26-04-2024 08:02:49,26-04-2024 08:02:49,0.001s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,26-04-2024 08:02:49,26-04-2024 08:02:49,0.004s,PASSED
println(uniqueId: $uniqueId),,,,26-04-2024 08:02:49,26-04-2024 08:02:49,0.002s,PASSED
"requestBody = 
{
    ""pos"": {
        ""description"": ""TestFlowPos"",
        ""fixed_amount"": false,
        ""category"": 5,
       ""external_reference"": ""QATest$uniqueIdSubstring""
    }
}
",,,,26-04-2024 08:02:49,26-04-2024 08:02:49,0.000s,PASSED
try,,,,26-04-2024 08:02:49,26-04-2024 08:02:49,0.960s,PASSED
,,,,,,,
Test Cases/Flow POS/9 Create Order,,,,26-04-2024 08:02:49,26-04-2024 08:02:52,2.041s,PASSED
uniqueId = randomUUID().toString(),,,,26-04-2024 08:02:50,26-04-2024 08:02:50,0.001s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,26-04-2024 08:02:50,26-04-2024 08:02:50,0.003s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,26-04-2024 08:02:50,26-04-2024 08:02:50,0.001s,PASSED
println(uniqueId: $uniqueId),,,,26-04-2024 08:02:50,26-04-2024 08:02:50,0.001s,PASSED
"requestBody = 
{
    ""external_reference"": ""$uniqueIdSubstring"",
    ""total_amount"": 1000,
    ""description"": ""Compra en HASAR"",
    ""title"": ""Compra en HASAR"",
    ""notification_url"": ""https://typedwebhook.tools/webhook/fab28b4a-60d2-41e5-b3b5-e90bf9cfc903?source_news=ipn"",
   
    ""items"": [
        {
            ""sku_number"": ""serie"",
            ""category"": ""category"",
            ""title"": ""title"",
            ""description"": ""description"",
            ""quantity"": 3,
            ""unit_measure"": ""unit"",
            ""unit_price"": ""500"",
            ""total_amount"": 1500,
            ""currency_id"": ""USDT""
        },
                {
            ""sku_number"": ""serie 2"",
            ""category"": ""category"",
            ""title"": ""title"",
            ""description"": ""description"",
            ""quantity"": 3,
            ""unit_measure"": ""unit"",
            ""unit_price"": ""500"",
            ""total_amount"": 1500,
            ""currency_id"": ""USDT""
        }
    ]
}
",,,,26-04-2024 08:02:50,26-04-2024 08:02:50,0.001s,PASSED
try,,,,26-04-2024 08:02:50,26-04-2024 08:02:52,1.840s,PASSED
,,,,,,,
Test Cases/Flow POS/9.1 auth_token_Admin - Copy,,,,26-04-2024 08:02:52,26-04-2024 08:02:53,1.043s,PASSED
"current_user = ""Hasar""",,,,26-04-2024 08:02:52,26-04-2024 08:02:52,0.001s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,26-04-2024 08:02:52,26-04-2024 08:02:53,1.011s,PASSED
responseBody = response.getResponseText(),,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.001s,PASSED
print(responseBody),,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.002s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.001s,PASSED
token = accessToken,,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.001s,PASSED
,,,,,,,
Test Cases/Flow POS/9.2 Get exchange data order,,,,26-04-2024 08:02:53,26-04-2024 08:02:54,1.045s,PASSED
customer_uuid = customer_uuid,,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.003s,PASSED
pos_uuid = pos_uuid,,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.001s,PASSED
"requestBody = 
{
  ""qrValue"":""Depay:$customer_uuid/$pos_uuid/false""

}
",,,,26-04-2024 08:02:53,26-04-2024 08:02:53,0.000s,PASSED
try,,,,26-04-2024 08:02:53,26-04-2024 08:02:54,0.866s,PASSED
,,,,,,,
Test Cases/Flow POS/9.3 Response Exchange,,,,26-04-2024 08:02:54,26-04-2024 08:02:56,2.034s,PASSED
uniqueId = randomUUID().toString(),,,,26-04-2024 08:02:54,26-04-2024 08:02:54,0.003s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,26-04-2024 08:02:54,26-04-2024 08:02:54,0.037s,PASSED
customer_uuid = customer_uuid,,,,26-04-2024 08:02:54,26-04-2024 08:02:54,0.001s,PASSED
pos_uuid = pos_uuid,,,,26-04-2024 08:02:54,26-04-2024 08:02:54,0.002s,PASSED
"requestBody = 
{
  ""qrValue"":""Depay:$customer_uuid/$pos_uuid/false"",
  ""transaction"": {
    ""wallet_origin"": ""QATest"",
    ""transaction_number"": ""$uniqueIdSubstring"",
    ""amount"":498008,
    ""status"": ""closed""
  }
}
",,,,26-04-2024 08:02:54,26-04-2024 08:02:54,0.001s,PASSED
try,,,,26-04-2024 08:02:54,26-04-2024 08:02:56,1.550s,PASSED
,,,,,,,
Test Cases/Flow POS/9.4 Get Order,,,,26-04-2024 08:02:56,26-04-2024 08:02:57,1.107s,PASSED
try,,,,26-04-2024 08:02:56,26-04-2024 08:02:57,0.890s,PASSED
