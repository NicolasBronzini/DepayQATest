Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Hasar,,,,29-03-2024 14:40:39,29-03-2024 14:40:49,10.731s,PASSED
,,,,,,,
Test Cases/Hasar Flow/1 auth_token_Admin,,,,29-03-2024 14:40:39,29-03-2024 14:40:44,5.269s,PASSED
"current_user = ""Hasar""",,,,29-03-2024 14:40:40,29-03-2024 14:40:40,0.401s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,29-03-2024 14:40:40,29-03-2024 14:40:44,4.031s,PASSED
responseBody = response.getResponseText(),,,,29-03-2024 14:40:44,29-03-2024 14:40:44,0.023s,PASSED
print(responseBody),,,,29-03-2024 14:40:44,29-03-2024 14:40:44,0.008s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,29-03-2024 14:40:44,29-03-2024 14:40:44,0.036s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,29-03-2024 14:40:44,29-03-2024 14:40:44,0.061s,PASSED
token = accessToken,,,,29-03-2024 14:40:44,29-03-2024 14:40:44,0.020s,PASSED
"println(""Response Body: "" + responseBody)",,,,29-03-2024 14:40:44,29-03-2024 14:40:44,0.021s,PASSED
,,,,,,,
Test Cases/Hasar Flow/2 Create Customer,,,,29-03-2024 14:40:44,29-03-2024 14:40:46,1.391s,PASSED
uniqueId = randomUUID().toString(),,,,29-03-2024 14:40:45,29-03-2024 14:40:45,0.023s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,29-03-2024 14:40:45,29-03-2024 14:40:45,0.015s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,29-03-2024 14:40:45,29-03-2024 14:40:45,0.049s,PASSED
println(uniqueId: $uniqueId),,,,29-03-2024 14:40:45,29-03-2024 14:40:45,0.002s,PASSED
"requestBody = 
{
  ""name"": ""QATest"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,29-03-2024 14:40:45,29-03-2024 14:40:45,0.002s,PASSED
try,,,,29-03-2024 14:40:45,29-03-2024 14:40:46,0.946s,PASSED
,,,,,,,
Test Cases/Hasar Flow/3 Create User tipo User,,,,29-03-2024 14:40:46,29-03-2024 14:40:47,1.389s,PASSED
uniqueId = randomUUID().toString(),,,,29-03-2024 14:40:46,29-03-2024 14:40:46,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,29-03-2024 14:40:46,29-03-2024 14:40:46,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,29-03-2024 14:40:46,29-03-2024 14:40:46,0.002s,PASSED
println(uniqueId: $uniqueId),,,,29-03-2024 14:40:46,29-03-2024 14:40:46,0.002s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,29-03-2024 14:40:46,29-03-2024 14:40:46,0.003s,PASSED
try,,,,29-03-2024 14:40:46,29-03-2024 14:40:47,0.994s,PASSED
,,,,,,,
Test Cases/Hasar Flow/4 auth_token_User,,,,29-03-2024 14:40:47,29-03-2024 14:40:48,1.087s,PASSED
"current_user = ""Hasar""",,,,29-03-2024 14:40:47,29-03-2024 14:40:47,0.001s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_user]))",,,,29-03-2024 14:40:47,29-03-2024 14:40:48,0.946s,PASSED
responseBody = response.getResponseText(),,,,29-03-2024 14:40:48,29-03-2024 14:40:48,0.002s,PASSED
print(responseBody),,,,29-03-2024 14:40:48,29-03-2024 14:40:48,0.002s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,29-03-2024 14:40:48,29-03-2024 14:40:48,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,29-03-2024 14:40:48,29-03-2024 14:40:48,0.001s,PASSED
token = accessToken,,,,29-03-2024 14:40:48,29-03-2024 14:40:48,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,29-03-2024 14:40:48,29-03-2024 14:40:48,0.001s,PASSED
,,,,,,,
Test Cases/Hasar Flow/5 AccessToken,,,,29-03-2024 14:40:48,29-03-2024 14:40:49,1.205s,PASSED
try,,,,29-03-2024 14:40:49,29-03-2024 14:40:49,0.754s,PASSED
