Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
POS test,,,,23-04-2024 15:56:38,23-04-2024 15:56:50,12.199s,PASSED
,,,,,,,
Test Cases/Flow POS/1 auth_token_Admin,,,,23-04-2024 15:56:38,23-04-2024 15:56:42,3.946s,PASSED
"current_user = ""Hasar""",,,,23-04-2024 15:56:39,23-04-2024 15:56:39,0.556s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,23-04-2024 15:56:39,23-04-2024 15:56:42,2.805s,PASSED
responseBody = response.getResponseText(),,,,23-04-2024 15:56:42,23-04-2024 15:56:42,0.026s,PASSED
print(responseBody),,,,23-04-2024 15:56:42,23-04-2024 15:56:42,0.008s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,23-04-2024 15:56:42,23-04-2024 15:56:42,0.021s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,23-04-2024 15:56:42,23-04-2024 15:56:42,0.024s,PASSED
token = accessToken,,,,23-04-2024 15:56:42,23-04-2024 15:56:42,0.060s,PASSED
"println(""Response Body: "" + responseBody)",,,,23-04-2024 15:56:42,23-04-2024 15:56:42,0.034s,PASSED
,,,,,,,
Test Cases/Flow POS/2 Client create,,,,23-04-2024 15:56:42,23-04-2024 15:56:44,1.367s,PASSED
uniqueId = randomUUID().toString(),,,,23-04-2024 15:56:43,23-04-2024 15:56:43,0.009s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,23-04-2024 15:56:43,23-04-2024 15:56:43,0.010s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,23-04-2024 15:56:43,23-04-2024 15:56:43,0.044s,PASSED
println(uniqueId: $uniqueId),,,,23-04-2024 15:56:43,23-04-2024 15:56:43,0.002s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""phone"": ""22222"",
  ""company"": ""Depay"",
""depay_fee"":""0.04"",
  ""external_reference"": ""Depay""
}
",,,,23-04-2024 15:56:43,23-04-2024 15:56:43,0.002s,PASSED
try,,,,23-04-2024 15:56:43,23-04-2024 15:56:44,0.895s,PASSED
,,,,,,,
Test Cases/Flow POS/3 Create Customer,,,,23-04-2024 15:56:44,23-04-2024 15:56:45,1.167s,PASSED
uniqueId = randomUUID().toString(),,,,23-04-2024 15:56:44,23-04-2024 15:56:44,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,23-04-2024 15:56:44,23-04-2024 15:56:44,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,23-04-2024 15:56:44,23-04-2024 15:56:44,0.003s,PASSED
println(uniqueId: $uniqueId),,,,23-04-2024 15:56:44,23-04-2024 15:56:44,0.005s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest"",
""depay_fee"":""0.04"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,23-04-2024 15:56:44,23-04-2024 15:56:44,0.003s,PASSED
try,,,,23-04-2024 15:56:44,23-04-2024 15:56:45,0.871s,PASSED
,,,,,,,
Test Cases/Flow POS/4 Create User tipo User,,,,23-04-2024 15:56:45,23-04-2024 15:56:46,1.166s,PASSED
uniqueId = randomUUID().toString(),,,,23-04-2024 15:56:45,23-04-2024 15:56:45,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,23-04-2024 15:56:45,23-04-2024 15:56:45,0.001s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,23-04-2024 15:56:45,23-04-2024 15:56:45,0.002s,PASSED
println(uniqueId: $uniqueId),,,,23-04-2024 15:56:45,23-04-2024 15:56:45,0.004s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,23-04-2024 15:56:45,23-04-2024 15:56:45,0.001s,PASSED
try,,,,23-04-2024 15:56:45,23-04-2024 15:56:46,0.935s,PASSED
,,,,,,,
Test Cases/Flow POS/5 auth_token_User,,,,23-04-2024 15:56:46,23-04-2024 15:56:47,1.160s,PASSED
"current_user = ""Hasar""",,,,23-04-2024 15:56:46,23-04-2024 15:56:46,0.001s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_pos]))",,,,23-04-2024 15:56:46,23-04-2024 15:56:47,0.985s,PASSED
responseBody = response.getResponseText(),,,,23-04-2024 15:56:47,23-04-2024 15:56:47,0.001s,PASSED
print(responseBody),,,,23-04-2024 15:56:47,23-04-2024 15:56:47,0.001s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,23-04-2024 15:56:47,23-04-2024 15:56:47,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,23-04-2024 15:56:47,23-04-2024 15:56:47,0.001s,PASSED
token_user = accessToken,,,,23-04-2024 15:56:47,23-04-2024 15:56:47,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,23-04-2024 15:56:47,23-04-2024 15:56:47,0.000s,PASSED
,,,,,,,
Test Cases/Flow POS/6 Get Access_Token,,,,23-04-2024 15:56:47,23-04-2024 15:56:48,1.033s,PASSED
try,,,,23-04-2024 15:56:47,23-04-2024 15:56:48,0.877s,PASSED
,,,,,,,
Test Cases/Flow POS/7 Create Store,,,,23-04-2024 15:56:48,23-04-2024 15:56:49,0.984s,PASSED
"requestBody = ""
{
""store"": {
        ""description"": ""TestQA"",
        ""external_reference"": ""TEST QA"",
        ""address"": ""TestQA"",
        ""phone"": ""11111111111"",
        ""manager"": ""TestQA""
    }
}
""",,,,23-04-2024 15:56:48,23-04-2024 15:56:48,0.002s,PASSED
try,,,,23-04-2024 15:56:48,23-04-2024 15:56:49,0.823s,PASSED
,,,,,,,
Test Cases/Flow POS/8 Create POS,,,,23-04-2024 15:56:49,23-04-2024 15:56:50,1.143s,PASSED
"requestBody = ""
{
    ""pos"": {
        ""description"": ""TestFlowPos"",
        ""fixed_amount"": false,
        ""category"": 5,
        ""external_reference"": ""test-flow-pos-1234567""
    }
}
""",,,,23-04-2024 15:56:50,23-04-2024 15:56:50,0.002s,PASSED
try,,,,23-04-2024 15:56:50,23-04-2024 15:56:50,0.945s,PASSED
