Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Hasar,,,,29-03-2024 17:28:18,29-03-2024 17:28:28,10.417s,PASSED
,,,,,,,
Test Cases/Hasar Flow/1 auth_token_Admin,,,,29-03-2024 17:28:18,29-03-2024 17:28:23,4.636s,PASSED
"current_user = ""Hasar""",,,,29-03-2024 17:28:19,29-03-2024 17:28:19,0.388s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,29-03-2024 17:28:19,29-03-2024 17:28:23,3.416s,PASSED
responseBody = response.getResponseText(),,,,29-03-2024 17:28:23,29-03-2024 17:28:23,0.031s,PASSED
print(responseBody),,,,29-03-2024 17:28:23,29-03-2024 17:28:23,0.011s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,29-03-2024 17:28:23,29-03-2024 17:28:23,0.031s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,29-03-2024 17:28:23,29-03-2024 17:28:23,0.059s,PASSED
token = accessToken,,,,29-03-2024 17:28:23,29-03-2024 17:28:23,0.039s,PASSED
"println(""Response Body: "" + responseBody)",,,,29-03-2024 17:28:23,29-03-2024 17:28:23,0.019s,PASSED
,,,,,,,
Test Cases/Hasar Flow/2 Create Customer,,,,29-03-2024 17:28:23,29-03-2024 17:28:25,1.564s,PASSED
uniqueId = randomUUID().toString(),,,,29-03-2024 17:28:24,29-03-2024 17:28:24,0.010s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,29-03-2024 17:28:24,29-03-2024 17:28:24,0.011s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,29-03-2024 17:28:24,29-03-2024 17:28:24,0.061s,PASSED
println(uniqueId: $uniqueId),,,,29-03-2024 17:28:24,29-03-2024 17:28:24,0.002s,PASSED
"requestBody = 
{
  ""name"": ""QATest"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,29-03-2024 17:28:24,29-03-2024 17:28:24,0.002s,PASSED
try,,,,29-03-2024 17:28:24,29-03-2024 17:28:25,0.879s,PASSED
,,,,,,,
Test Cases/Hasar Flow/3 Create User tipo User,,,,29-03-2024 17:28:25,29-03-2024 17:28:26,1.445s,PASSED
uniqueId = randomUUID().toString(),,,,29-03-2024 17:28:25,29-03-2024 17:28:25,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,29-03-2024 17:28:25,29-03-2024 17:28:25,0.007s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,29-03-2024 17:28:25,29-03-2024 17:28:25,0.006s,PASSED
println(uniqueId: $uniqueId),,,,29-03-2024 17:28:25,29-03-2024 17:28:25,0.002s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,29-03-2024 17:28:25,29-03-2024 17:28:25,0.002s,PASSED
try,,,,29-03-2024 17:28:25,29-03-2024 17:28:26,0.978s,PASSED
,,,,,,,
Test Cases/Hasar Flow/4 auth_token_User,,,,29-03-2024 17:28:26,29-03-2024 17:28:27,1.128s,PASSED
"current_user = ""Hasar""",,,,29-03-2024 17:28:26,29-03-2024 17:28:26,0.004s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_user]))",,,,29-03-2024 17:28:26,29-03-2024 17:28:27,0.959s,PASSED
responseBody = response.getResponseText(),,,,29-03-2024 17:28:27,29-03-2024 17:28:27,0.001s,PASSED
print(responseBody),,,,29-03-2024 17:28:27,29-03-2024 17:28:27,0.002s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,29-03-2024 17:28:27,29-03-2024 17:28:27,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,29-03-2024 17:28:27,29-03-2024 17:28:27,0.001s,PASSED
token = accessToken,,,,29-03-2024 17:28:27,29-03-2024 17:28:27,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,29-03-2024 17:28:27,29-03-2024 17:28:27,0.000s,PASSED
,,,,,,,
Test Cases/Hasar Flow/5 AccessToken,,,,29-03-2024 17:28:27,29-03-2024 17:28:28,1.109s,PASSED
try,,,,29-03-2024 17:28:28,29-03-2024 17:28:28,0.799s,PASSED
