Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
POS test,,,,24-04-2024 10:53:33,24-04-2024 10:53:48,15.149s,PASSED
,,,,,,,
Test Cases/Flow POS/1 auth_token_Admin,,,,24-04-2024 10:53:33,24-04-2024 10:53:37,4.038s,PASSED
"current_user = ""Hasar""",,,,24-04-2024 10:53:33,24-04-2024 10:53:34,0.646s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,24-04-2024 10:53:34,24-04-2024 10:53:37,2.887s,PASSED
responseBody = response.getResponseText(),,,,24-04-2024 10:53:37,24-04-2024 10:53:37,0.028s,PASSED
print(responseBody),,,,24-04-2024 10:53:37,24-04-2024 10:53:37,0.011s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,24-04-2024 10:53:37,24-04-2024 10:53:37,0.020s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,24-04-2024 10:53:37,24-04-2024 10:53:37,0.025s,PASSED
token = accessToken,,,,24-04-2024 10:53:37,24-04-2024 10:53:37,0.021s,PASSED
"println(""Response Body: "" + responseBody)",,,,24-04-2024 10:53:37,24-04-2024 10:53:37,0.006s,PASSED
,,,,,,,
Test Cases/Flow POS/2 Client create,,,,24-04-2024 10:53:37,24-04-2024 10:53:39,1.387s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 10:53:37,24-04-2024 10:53:37,0.009s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 10:53:37,24-04-2024 10:53:37,0.009s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 10:53:37,24-04-2024 10:53:38,0.038s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 10:53:38,24-04-2024 10:53:38,0.007s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""phone"": ""22222"",
  ""company"": ""Depay"",
""depay_fee"":""0.04"",
  ""external_reference"": ""Depay""
}
",,,,24-04-2024 10:53:38,24-04-2024 10:53:38,0.004s,PASSED
try,,,,24-04-2024 10:53:38,24-04-2024 10:53:38,0.948s,PASSED
,,,,,,,
Test Cases/Flow POS/3 Create Customer,,,,24-04-2024 10:53:39,24-04-2024 10:53:40,1.111s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 10:53:39,24-04-2024 10:53:39,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 10:53:39,24-04-2024 10:53:39,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 10:53:39,24-04-2024 10:53:39,0.003s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 10:53:39,24-04-2024 10:53:39,0.001s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest$uniqueIdSubstring"",
""depay_fee"":""0.04"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,24-04-2024 10:53:39,24-04-2024 10:53:39,0.001s,PASSED
try,,,,24-04-2024 10:53:39,24-04-2024 10:53:40,0.831s,PASSED
,,,,,,,
Test Cases/Flow POS/4 Create User tipo User,,,,24-04-2024 10:53:40,24-04-2024 10:53:41,1.189s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 10:53:40,24-04-2024 10:53:40,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 10:53:40,24-04-2024 10:53:40,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 10:53:40,24-04-2024 10:53:40,0.002s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 10:53:40,24-04-2024 10:53:40,0.002s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,24-04-2024 10:53:40,24-04-2024 10:53:40,0.001s,PASSED
try,,,,24-04-2024 10:53:40,24-04-2024 10:53:41,0.959s,PASSED
,,,,,,,
Test Cases/Flow POS/5 auth_token_User,,,,24-04-2024 10:53:41,24-04-2024 10:53:42,1.191s,PASSED
"current_user = ""Hasar""",,,,24-04-2024 10:53:41,24-04-2024 10:53:41,0.001s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_pos]))",,,,24-04-2024 10:53:41,24-04-2024 10:53:42,1.037s,PASSED
responseBody = response.getResponseText(),,,,24-04-2024 10:53:42,24-04-2024 10:53:42,0.002s,PASSED
print(responseBody),,,,24-04-2024 10:53:42,24-04-2024 10:53:42,0.001s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,24-04-2024 10:53:42,24-04-2024 10:53:42,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,24-04-2024 10:53:42,24-04-2024 10:53:42,0.002s,PASSED
token_user = accessToken,,,,24-04-2024 10:53:42,24-04-2024 10:53:42,0.002s,PASSED
"println(""Response Body: "" + responseBody)",,,,24-04-2024 10:53:42,24-04-2024 10:53:42,0.001s,PASSED
,,,,,,,
Test Cases/Flow POS/6 Get Access_Token,,,,24-04-2024 10:53:42,24-04-2024 10:53:43,0.982s,PASSED
try,,,,24-04-2024 10:53:42,24-04-2024 10:53:43,0.821s,PASSED
,,,,,,,
Test Cases/Flow POS/7 Create Store,,,,24-04-2024 10:53:43,24-04-2024 10:53:44,1.058s,PASSED
"requestBody = ""
{
""store"": {
        ""description"": ""TestQA"",
        ""external_reference"": ""TEST QA"",
        ""address"": ""TestQA"",
        ""phone"": ""11111111111"",
        ""manager"": ""TestQA""
    }
}
""",,,,24-04-2024 10:53:43,24-04-2024 10:53:43,0.001s,PASSED
try,,,,24-04-2024 10:53:43,24-04-2024 10:53:44,0.812s,PASSED
,,,,,,,
Test Cases/Flow POS/8 Create POS,,,,24-04-2024 10:53:44,24-04-2024 10:53:45,1.016s,PASSED
"requestBody = ""
{
    ""pos"": {
        ""description"": ""TestFlowPos"",
        ""fixed_amount"": false,
        ""category"": 5,
        ""external_reference"": ""test-flow-pos-1234567""
    }
}
""",,,,24-04-2024 10:53:44,24-04-2024 10:53:44,0.001s,PASSED
try,,,,24-04-2024 10:53:44,24-04-2024 10:53:45,0.849s,PASSED
,,,,,,,
Test Cases/Flow POS/9 auth_token_Admin - Copy,,,,24-04-2024 10:53:45,24-04-2024 10:53:46,1.007s,PASSED
"current_user = ""Hasar""",,,,24-04-2024 10:53:45,24-04-2024 10:53:45,0.002s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,24-04-2024 10:53:45,24-04-2024 10:53:46,0.964s,PASSED
responseBody = response.getResponseText(),,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.000s,PASSED
print(responseBody),,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.000s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.000s,PASSED
token = accessToken,,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.000s,PASSED
,,,,,,,
Test Cases/Flow POS/9.1 Create Order,,,,24-04-2024 10:53:46,24-04-2024 10:53:48,1.933s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.001s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.001s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.001s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.001s,PASSED
"requestBody = 
{
    ""external_reference"": ""$uniqueIdSubstring"",
    ""total_amount"": 1000,
    ""description"": ""Compra en HASAR"",
    ""title"": ""Compra en HASAR"",
    ""notification_url"": ""https://typedwebhook.tools/webhook/fab28b4a-60d2-41e5-b3b5-e90bf9cfc903?source_news=ipn"",
   
    ""items"": [
        {
            ""sku_number"": ""serie"",
            ""category"": ""category"",
            ""title"": ""title"",
            ""description"": ""description"",
            ""quantity"": 3,
            ""unit_measure"": ""unit"",
            ""unit_price"": ""500"",
            ""total_amount"": 1500,
            ""currency_id"": ""USDT""
        },
                {
            ""sku_number"": ""serie 2"",
            ""category"": ""category"",
            ""title"": ""title"",
            ""description"": ""description"",
            ""quantity"": 3,
            ""unit_measure"": ""unit"",
            ""unit_price"": ""500"",
            ""total_amount"": 1500,
            ""currency_id"": ""USDT""
        }
    ]
}
",,,,24-04-2024 10:53:46,24-04-2024 10:53:46,0.001s,PASSED
try,,,,24-04-2024 10:53:46,24-04-2024 10:53:48,1.672s,PASSED
