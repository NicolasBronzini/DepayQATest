Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Ecommerce test,,,,04-04-2024 11:23:58,04-04-2024 11:24:10,12.195s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/1 auth_token_Admin,,,,04-04-2024 11:23:58,04-04-2024 11:24:02,4.028s,PASSED
"current_user = ""Hasar""",,,,04-04-2024 11:23:59,04-04-2024 11:23:59,0.383s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key]))",,,,04-04-2024 11:23:59,04-04-2024 11:24:02,3.039s,PASSED
responseBody = response.getResponseText(),,,,04-04-2024 11:24:02,04-04-2024 11:24:02,0.038s,PASSED
print(responseBody),,,,04-04-2024 11:24:02,04-04-2024 11:24:02,0.014s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,04-04-2024 11:24:02,04-04-2024 11:24:02,0.035s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,04-04-2024 11:24:02,04-04-2024 11:24:02,0.053s,PASSED
token = accessToken,,,,04-04-2024 11:24:02,04-04-2024 11:24:02,0.035s,PASSED
"println(""Response Body: "" + responseBody)",,,,04-04-2024 11:24:02,04-04-2024 11:24:02,0.006s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/2 Create Customer,,,,04-04-2024 11:24:02,04-04-2024 11:24:04,1.507s,PASSED
uniqueId = randomUUID().toString(),,,,04-04-2024 11:24:03,04-04-2024 11:24:03,0.009s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,04-04-2024 11:24:03,04-04-2024 11:24:03,0.009s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,04-04-2024 11:24:03,04-04-2024 11:24:03,0.046s,PASSED
println(uniqueId: $uniqueId),,,,04-04-2024 11:24:03,04-04-2024 11:24:03,0.002s,PASSED
"requestBody = 
{
  ""name"": ""QATest"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,04-04-2024 11:24:03,04-04-2024 11:24:03,0.002s,PASSED
try,,,,04-04-2024 11:24:03,04-04-2024 11:24:04,1.008s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/3 Client create,,,,04-04-2024 11:24:04,04-04-2024 11:24:05,1.152s,PASSED
uniqueId = randomUUID().toString(),,,,04-04-2024 11:24:04,04-04-2024 11:24:04,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,04-04-2024 11:24:04,04-04-2024 11:24:04,0.003s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,04-04-2024 11:24:04,04-04-2024 11:24:04,0.003s,PASSED
println(uniqueId: $uniqueId),,,,04-04-2024 11:24:04,04-04-2024 11:24:04,0.001s,PASSED
"requestBody = 
{
  ""name"": ""QATest"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""phone"": ""22222"",
  ""company"": ""Depay"",
  ""external_reference"": ""Depay""
}
",,,,04-04-2024 11:24:04,04-04-2024 11:24:04,0.001s,PASSED
try,,,,04-04-2024 11:24:04,04-04-2024 11:24:05,0.885s,PASSED
catch (Exception e),,,,04-04-2024 11:24:05,04-04-2024 11:24:05,0.023s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/3 Create User tipo User,,,,04-04-2024 11:24:05,04-04-2024 11:24:06,1.128s,PASSED
uniqueId = randomUUID().toString(),,,,04-04-2024 11:24:05,04-04-2024 11:24:05,0.003s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,04-04-2024 11:24:05,04-04-2024 11:24:05,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,04-04-2024 11:24:05,04-04-2024 11:24:05,0.009s,PASSED
println(uniqueId: $uniqueId),,,,04-04-2024 11:24:05,04-04-2024 11:24:05,0.002s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,04-04-2024 11:24:05,04-04-2024 11:24:05,0.003s,PASSED
try,,,,04-04-2024 11:24:05,04-04-2024 11:24:06,0.924s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/4 auth_token_User,,,,04-04-2024 11:24:06,04-04-2024 11:24:07,1.227s,PASSED
"current_user = ""Hasar""",,,,04-04-2024 11:24:06,04-04-2024 11:24:06,0.004s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_user]))",,,,04-04-2024 11:24:06,04-04-2024 11:24:07,1.048s,PASSED
responseBody = response.getResponseText(),,,,04-04-2024 11:24:07,04-04-2024 11:24:07,0.002s,PASSED
print(responseBody),,,,04-04-2024 11:24:07,04-04-2024 11:24:07,0.001s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,04-04-2024 11:24:07,04-04-2024 11:24:07,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,04-04-2024 11:24:07,04-04-2024 11:24:07,0.001s,PASSED
token = accessToken,,,,04-04-2024 11:24:07,04-04-2024 11:24:07,0.000s,PASSED
"println(""Response Body: "" + responseBody)",,,,04-04-2024 11:24:07,04-04-2024 11:24:07,0.000s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/5 AccessToken,,,,04-04-2024 11:24:07,04-04-2024 11:24:08,0.970s,PASSED
try,,,,04-04-2024 11:24:08,04-04-2024 11:24:08,0.779s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/6 Create Store (sin pos),,,,04-04-2024 11:24:08,04-04-2024 11:24:10,1.955s,PASSED
"sendRequest(findTestObject(""Flow Admin/3) Store - Crear sin POS"", [""url_base"":url_base]))",,,,04-04-2024 11:24:09,04-04-2024 11:24:10,0.898s,PASSED
uniqueId = randomUUID().toString(),,,,04-04-2024 11:24:10,04-04-2024 11:24:10,0.003s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,04-04-2024 11:24:10,04-04-2024 11:24:10,0.003s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,04-04-2024 11:24:10,04-04-2024 11:24:10,0.003s,PASSED
println(uniqueId: $uniqueId),,,,04-04-2024 11:24:10,04-04-2024 11:24:10,0.002s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,04-04-2024 11:24:10,04-04-2024 11:24:10,0.002s,PASSED
try,,,,04-04-2024 11:24:10,04-04-2024 11:24:10,0.782s,PASSED
catch (Exception e),,,,04-04-2024 11:24:10,04-04-2024 11:24:10,0.002s,PASSED
