Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
POS test,,,,23-04-2024 16:39:14,23-04-2024 16:39:31,17.236s,PASSED
,,,,,,,
Test Cases/Flow POS/1 auth_token_Admin,,,,23-04-2024 16:39:14,23-04-2024 16:39:20,5.897s,PASSED
"current_user = ""Hasar""",,,,23-04-2024 16:39:15,23-04-2024 16:39:16,0.872s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,23-04-2024 16:39:16,23-04-2024 16:39:20,3.945s,PASSED
responseBody = response.getResponseText(),,,,23-04-2024 16:39:20,23-04-2024 16:39:20,0.062s,PASSED
print(responseBody),,,,23-04-2024 16:39:20,23-04-2024 16:39:20,0.036s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,23-04-2024 16:39:20,23-04-2024 16:39:20,0.033s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,23-04-2024 16:39:20,23-04-2024 16:39:20,0.034s,PASSED
token = accessToken,,,,23-04-2024 16:39:20,23-04-2024 16:39:20,0.038s,PASSED
"println(""Response Body: "" + responseBody)",,,,23-04-2024 16:39:20,23-04-2024 16:39:20,0.014s,PASSED
,,,,,,,
Test Cases/Flow POS/2 Client create,,,,23-04-2024 16:39:20,23-04-2024 16:39:22,1.847s,PASSED
uniqueId = randomUUID().toString(),,,,23-04-2024 16:39:21,23-04-2024 16:39:21,0.014s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,23-04-2024 16:39:21,23-04-2024 16:39:21,0.019s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,23-04-2024 16:39:21,23-04-2024 16:39:21,0.072s,PASSED
println(uniqueId: $uniqueId),,,,23-04-2024 16:39:21,23-04-2024 16:39:21,0.007s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""phone"": ""22222"",
  ""company"": ""Depay"",
""depay_fee"":""0.04"",
  ""external_reference"": ""Depay""
}
",,,,23-04-2024 16:39:21,23-04-2024 16:39:21,0.003s,PASSED
try,,,,23-04-2024 16:39:21,23-04-2024 16:39:22,1.020s,PASSED
,,,,,,,
Test Cases/Flow POS/3 Create Customer,,,,23-04-2024 16:39:22,23-04-2024 16:39:23,1.335s,PASSED
uniqueId = randomUUID().toString(),,,,23-04-2024 16:39:22,23-04-2024 16:39:22,0.006s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,23-04-2024 16:39:22,23-04-2024 16:39:22,0.004s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,23-04-2024 16:39:22,23-04-2024 16:39:22,0.003s,PASSED
println(uniqueId: $uniqueId),,,,23-04-2024 16:39:22,23-04-2024 16:39:22,0.004s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest"",
""depay_fee"":""0.04"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,23-04-2024 16:39:22,23-04-2024 16:39:22,0.003s,PASSED
try,,,,23-04-2024 16:39:22,23-04-2024 16:39:23,0.894s,PASSED
,,,,,,,
Test Cases/Flow POS/4 Create User tipo User,,,,23-04-2024 16:39:23,23-04-2024 16:39:25,1.639s,PASSED
uniqueId = randomUUID().toString(),,,,23-04-2024 16:39:24,23-04-2024 16:39:24,0.010s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,23-04-2024 16:39:24,23-04-2024 16:39:24,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,23-04-2024 16:39:24,23-04-2024 16:39:24,0.013s,PASSED
println(uniqueId: $uniqueId),,,,23-04-2024 16:39:24,23-04-2024 16:39:24,0.004s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,23-04-2024 16:39:24,23-04-2024 16:39:24,0.002s,PASSED
try,,,,23-04-2024 16:39:24,23-04-2024 16:39:25,0.959s,PASSED
,,,,,,,
Test Cases/Flow POS/5 auth_token_User,,,,23-04-2024 16:39:25,23-04-2024 16:39:26,1.180s,PASSED
"current_user = ""Hasar""",,,,23-04-2024 16:39:25,23-04-2024 16:39:25,0.002s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_pos]))",,,,23-04-2024 16:39:25,23-04-2024 16:39:26,1.013s,PASSED
responseBody = response.getResponseText(),,,,23-04-2024 16:39:26,23-04-2024 16:39:26,0.001s,PASSED
print(responseBody),,,,23-04-2024 16:39:26,23-04-2024 16:39:26,0.002s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,23-04-2024 16:39:26,23-04-2024 16:39:26,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,23-04-2024 16:39:26,23-04-2024 16:39:26,0.003s,PASSED
token_user = accessToken,,,,23-04-2024 16:39:26,23-04-2024 16:39:26,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,23-04-2024 16:39:26,23-04-2024 16:39:26,0.001s,PASSED
,,,,,,,
Test Cases/Flow POS/6 Get Access_Token,,,,23-04-2024 16:39:26,23-04-2024 16:39:27,1.139s,PASSED
try,,,,23-04-2024 16:39:26,23-04-2024 16:39:27,0.848s,PASSED
,,,,,,,
Test Cases/Flow POS/7 Create Store,,,,23-04-2024 16:39:27,23-04-2024 16:39:28,1.068s,PASSED
"requestBody = ""
{
""store"": {
        ""description"": ""TestQA"",
        ""external_reference"": ""TEST QA"",
        ""address"": ""TestQA"",
        ""phone"": ""11111111111"",
        ""manager"": ""TestQA""
    }
}
""",,,,23-04-2024 16:39:27,23-04-2024 16:39:27,0.001s,PASSED
try,,,,23-04-2024 16:39:27,23-04-2024 16:39:28,0.843s,PASSED
,,,,,,,
Test Cases/Flow POS/8 Create POS,,,,23-04-2024 16:39:28,23-04-2024 16:39:30,1.227s,PASSED
"requestBody = ""
{
    ""pos"": {
        ""description"": ""TestFlowPos"",
        ""fixed_amount"": false,
        ""category"": 5,
        ""external_reference"": ""test-flow-pos-1234567""
    }
}
""",,,,23-04-2024 16:39:29,23-04-2024 16:39:29,0.002s,PASSED
try,,,,23-04-2024 16:39:29,23-04-2024 16:39:30,0.911s,PASSED
,,,,,,,
Test Cases/Flow POS/9 Create Order,,,,23-04-2024 16:39:30,23-04-2024 16:39:31,1.455s,PASSED
uniqueId = randomUUID().toString(),,,,23-04-2024 16:39:30,23-04-2024 16:39:30,0.001s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,23-04-2024 16:39:30,23-04-2024 16:39:30,0.001s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,23-04-2024 16:39:30,23-04-2024 16:39:30,0.003s,PASSED
println(uniqueId: $uniqueId),,,,23-04-2024 16:39:30,23-04-2024 16:39:30,0.001s,PASSED
"requestBody = 
{
    ""external_reference"": ""$uniqueIdSubstring"",
    ""total_amount"": 1000,
    ""description"": ""Compra en HASAR"",
    ""title"": ""Compra en HASAR"",
    ""notification_url"": ""https://typedwebhook.tools/webhook/fab28b4a-60d2-41e5-b3b5-e90bf9cfc903?source_news=ipn"",
   
    ""items"": [
        {
            ""sku_number"": ""serie"",
            ""category"": ""category"",
            ""title"": ""title"",
            ""description"": ""description"",
            ""quantity"": 3,
            ""unit_measure"": ""unit"",
            ""unit_price"": ""500"",
            ""total_amount"": 1500,
            ""currency_id"": ""USDT""
        },
                {
            ""sku_number"": ""serie 2"",
            ""category"": ""category"",
            ""title"": ""title"",
            ""description"": ""description"",
            ""quantity"": 3,
            ""unit_measure"": ""unit"",
            ""unit_price"": ""500"",
            ""total_amount"": 1500,
            ""currency_id"": ""USDT""
        }
    ]
}
",,,,23-04-2024 16:39:30,23-04-2024 16:39:30,0.001s,PASSED
try,,,,23-04-2024 16:39:30,23-04-2024 16:39:31,0.895s,PASSED
