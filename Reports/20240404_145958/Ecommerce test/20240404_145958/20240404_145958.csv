Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Ecommerce test,,,,04-04-2024 15:00:04,04-04-2024 15:00:13,8.825s,ERROR
,,,,,,,
Test Cases/Flow Ecommerce/1 auth_token_Admin,,,,04-04-2024 15:00:04,04-04-2024 15:00:08,3.772s,PASSED
"current_user = ""Hasar""",,,,04-04-2024 15:00:05,04-04-2024 15:00:05,0.405s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key]))",,,,04-04-2024 15:00:05,04-04-2024 15:00:08,2.811s,PASSED
responseBody = response.getResponseText(),,,,04-04-2024 15:00:08,04-04-2024 15:00:08,0.017s,PASSED
print(responseBody),,,,04-04-2024 15:00:08,04-04-2024 15:00:08,0.035s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,04-04-2024 15:00:08,04-04-2024 15:00:08,0.020s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,04-04-2024 15:00:08,04-04-2024 15:00:08,0.026s,PASSED
token = accessToken,,,,04-04-2024 15:00:08,04-04-2024 15:00:08,0.044s,PASSED
"println(""Response Body: "" + responseBody)",,,,04-04-2024 15:00:08,04-04-2024 15:00:08,0.006s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/2 Client create,,,,04-04-2024 15:00:08,04-04-2024 15:00:09,1.299s,PASSED
uniqueId = randomUUID().toString(),,,,04-04-2024 15:00:09,04-04-2024 15:00:09,0.008s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,04-04-2024 15:00:09,04-04-2024 15:00:09,0.008s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,04-04-2024 15:00:09,04-04-2024 15:00:09,0.035s,PASSED
println(uniqueId: $uniqueId),,,,04-04-2024 15:00:09,04-04-2024 15:00:09,0.001s,PASSED
"requestBody = 
{
  ""name"": ""QATest"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""phone"": ""22222"",
  ""company"": ""Depay"",
  ""external_reference"": ""Depay""
}
",,,,04-04-2024 15:00:09,04-04-2024 15:00:09,0.002s,PASSED
try,,,,04-04-2024 15:00:09,04-04-2024 15:00:09,0.924s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/3 Create Customer,,,,04-04-2024 15:00:10,04-04-2024 15:00:11,1.168s,PASSED
uniqueId = randomUUID().toString(),,,,04-04-2024 15:00:10,04-04-2024 15:00:10,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,04-04-2024 15:00:10,04-04-2024 15:00:10,0.003s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,04-04-2024 15:00:10,04-04-2024 15:00:10,0.002s,PASSED
println(uniqueId: $uniqueId),,,,04-04-2024 15:00:10,04-04-2024 15:00:10,0.001s,PASSED
"requestBody = 
{
  ""name"": ""QATest"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,04-04-2024 15:00:10,04-04-2024 15:00:10,0.001s,PASSED
try,,,,04-04-2024 15:00:10,04-04-2024 15:00:11,0.828s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/4 Create User tipo Admin,,,,04-04-2024 15:00:11,04-04-2024 15:00:12,1.175s,PASSED
uniqueId = randomUUID().toString(),,,,04-04-2024 15:00:11,04-04-2024 15:00:11,0.002s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,04-04-2024 15:00:11,04-04-2024 15:00:11,0.003s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,04-04-2024 15:00:11,04-04-2024 15:00:11,0.003s,PASSED
println(uniqueId: $uniqueId),,,,04-04-2024 15:00:11,04-04-2024 15:00:11,0.003s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""admin""
    }
}
",,,,04-04-2024 15:00:11,04-04-2024 15:00:11,0.002s,PASSED
try,,,,04-04-2024 15:00:11,04-04-2024 15:00:12,0.960s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/5 auth_token_Admin,,,,04-04-2024 15:00:12,04-04-2024 15:00:13,1.085s,PASSED
"current_user = ""Hasar""",,,,04-04-2024 15:00:12,04-04-2024 15:00:12,0.002s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_user]))",,,,04-04-2024 15:00:12,04-04-2024 15:00:13,0.930s,PASSED
responseBody = response.getResponseText(),,,,04-04-2024 15:00:13,04-04-2024 15:00:13,0.001s,PASSED
print(responseBody),,,,04-04-2024 15:00:13,04-04-2024 15:00:13,0.001s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,04-04-2024 15:00:13,04-04-2024 15:00:13,0.001s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,04-04-2024 15:00:13,04-04-2024 15:00:13,0.001s,PASSED
token = accessToken,,,,04-04-2024 15:00:13,04-04-2024 15:00:13,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,04-04-2024 15:00:13,04-04-2024 15:00:13,0.001s,PASSED
,,,,,,,
Test Cases/Flow Ecommerce/6 CreateOrder Ecommerce,,,,04-04-2024 15:00:13,04-04-2024 15:00:13,0.103s,ERROR
"sendRequest(findTestObject(""Flow Admin/7.1) Order - Crear una con sus items (ECOMMERCE)"", [""url_local"":url_local]))",,,,04-04-2024 15:00:13,04-04-2024 15:00:13,0.015s,ERROR
