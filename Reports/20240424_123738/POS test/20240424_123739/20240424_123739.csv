Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
POS test,,,,24-04-2024 12:37:47,24-04-2024 12:38:07,19.977s,FAILED
,,,,,,,
Test Cases/Flow POS/1 auth_token_Admin,,,,24-04-2024 12:37:47,24-04-2024 12:37:53,5.614s,PASSED
"current_user = ""Hasar""",,,,24-04-2024 12:37:48,24-04-2024 12:37:49,0.873s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,24-04-2024 12:37:49,24-04-2024 12:37:53,3.882s,PASSED
responseBody = response.getResponseText(),,,,24-04-2024 12:37:53,24-04-2024 12:37:53,0.085s,PASSED
print(responseBody),,,,24-04-2024 12:37:53,24-04-2024 12:37:53,0.016s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,24-04-2024 12:37:53,24-04-2024 12:37:53,0.105s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,24-04-2024 12:37:53,24-04-2024 12:37:53,0.026s,PASSED
token = accessToken,,,,24-04-2024 12:37:53,24-04-2024 12:37:53,0.013s,PASSED
"println(""Response Body: "" + responseBody)",,,,24-04-2024 12:37:53,24-04-2024 12:37:53,0.028s,PASSED
,,,,,,,
Test Cases/Flow POS/2 Client create,,,,24-04-2024 12:37:53,24-04-2024 12:37:55,1.835s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 12:37:53,24-04-2024 12:37:53,0.035s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 12:37:53,24-04-2024 12:37:53,0.016s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 12:37:53,24-04-2024 12:37:54,0.071s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 12:37:54,24-04-2024 12:37:54,0.003s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""phone"": ""22222"",
  ""company"": ""Depay"",
""depay_fee"":""0.04"",
  ""external_reference"": ""Depay""
}
",,,,24-04-2024 12:37:54,24-04-2024 12:37:54,0.005s,PASSED
try,,,,24-04-2024 12:37:54,24-04-2024 12:37:55,1.120s,PASSED
,,,,,,,
Test Cases/Flow POS/3 Create Customer,,,,24-04-2024 12:37:55,24-04-2024 12:37:56,1.299s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 12:37:55,24-04-2024 12:37:55,0.005s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 12:37:55,24-04-2024 12:37:55,0.006s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 12:37:55,24-04-2024 12:37:55,0.015s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 12:37:55,24-04-2024 12:37:55,0.005s,PASSED
"requestBody = 
{
  ""name"": ""QATestPOS"",
  ""email"": ""QATest$uniqueIdSubstring@gmail.com"",
  ""address"": ""QATest"",
  ""phone"": ""1148784215"",
  ""company"": ""QATest"",
  ""external_reference"": ""QATest$uniqueIdSubstring"",
""depay_fee"":""0.04"",
  ""description"": ""QATest"",
  ""manager"": ""QATest"",
  ""wallet"": {
      ""address"": ""0x71C7656EC7ab88b098defB751B7401B5f6d8976F"",
      ""network"": ""Ethereum"",
      ""coin"": ""ETH""
  }
}
",,,,24-04-2024 12:37:55,24-04-2024 12:37:55,0.004s,PASSED
try,,,,24-04-2024 12:37:55,24-04-2024 12:37:56,0.967s,PASSED
,,,,,,,
Test Cases/Flow POS/4 Create User tipo User,,,,24-04-2024 12:37:56,24-04-2024 12:37:57,1.287s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 12:37:56,24-04-2024 12:37:56,0.003s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 12:37:56,24-04-2024 12:37:56,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 12:37:56,24-04-2024 12:37:56,0.002s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 12:37:56,24-04-2024 12:37:56,0.002s,PASSED
"requestBody = 
{
    ""user"": {
		""username"": ""QATest$uniqueIdSubstring"",
        ""password"": ""1234"",
        ""role"": ""user""
    }
}
",,,,24-04-2024 12:37:56,24-04-2024 12:37:56,0.003s,PASSED
try,,,,24-04-2024 12:37:56,24-04-2024 12:37:57,1.026s,PASSED
,,,,,,,
Test Cases/Flow POS/5 auth_token_User,,,,24-04-2024 12:37:57,24-04-2024 12:37:59,1.277s,PASSED
"current_user = ""Hasar""",,,,24-04-2024 12:37:57,24-04-2024 12:37:57,0.002s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_pos]))",,,,24-04-2024 12:37:57,24-04-2024 12:37:59,1.106s,PASSED
responseBody = response.getResponseText(),,,,24-04-2024 12:37:59,24-04-2024 12:37:59,0.002s,PASSED
print(responseBody),,,,24-04-2024 12:37:59,24-04-2024 12:37:59,0.002s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,24-04-2024 12:37:59,24-04-2024 12:37:59,0.002s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,24-04-2024 12:37:59,24-04-2024 12:37:59,0.001s,PASSED
token_user = accessToken,,,,24-04-2024 12:37:59,24-04-2024 12:37:59,0.001s,PASSED
"println(""Response Body: "" + responseBody)",,,,24-04-2024 12:37:59,24-04-2024 12:37:59,0.001s,PASSED
,,,,,,,
Test Cases/Flow POS/6 Get Access_Token,,,,24-04-2024 12:37:59,24-04-2024 12:38:00,1.025s,PASSED
try,,,,24-04-2024 12:37:59,24-04-2024 12:38:00,0.839s,PASSED
,,,,,,,
Test Cases/Flow POS/7 Create Store,,,,24-04-2024 12:38:00,24-04-2024 12:38:01,1.020s,PASSED
"requestBody = ""
{
""store"": {
        ""description"": ""TestQA"",
        ""external_reference"": ""TEST QA"",
        ""address"": ""TestQA"",
        ""phone"": ""11111111111"",
        ""manager"": ""TestQA""
    }
}
""",,,,24-04-2024 12:38:00,24-04-2024 12:38:00,0.001s,PASSED
try,,,,24-04-2024 12:38:00,24-04-2024 12:38:01,0.853s,PASSED
,,,,,,,
Test Cases/Flow POS/8 Create POS,,,,24-04-2024 12:38:01,24-04-2024 12:38:02,1.107s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 12:38:01,24-04-2024 12:38:01,0.001s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 12:38:01,24-04-2024 12:38:01,0.000s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 12:38:01,24-04-2024 12:38:01,0.001s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 12:38:01,24-04-2024 12:38:01,0.001s,PASSED
"requestBody = 
{
    ""pos"": {
        ""description"": ""TestFlowPos"",
        ""fixed_amount"": false,
        ""category"": 5,
       ""external_reference"": ""QATest$uniqueIdSubstring""
    }
}
",,,,24-04-2024 12:38:01,24-04-2024 12:38:01,0.000s,PASSED
try,,,,24-04-2024 12:38:01,24-04-2024 12:38:02,0.840s,PASSED
,,,,,,,
Test Cases/Flow POS/9 Create Order,,,,24-04-2024 12:38:02,24-04-2024 12:38:04,1.923s,PASSED
uniqueId = randomUUID().toString(),,,,24-04-2024 12:38:02,24-04-2024 12:38:02,0.001s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 12:38:02,24-04-2024 12:38:02,0.002s,PASSED
println(uniqueIdSubstring: $uniqueIdSubstring),,,,24-04-2024 12:38:02,24-04-2024 12:38:02,0.004s,PASSED
println(uniqueId: $uniqueId),,,,24-04-2024 12:38:02,24-04-2024 12:38:02,0.001s,PASSED
"requestBody = 
{
    ""external_reference"": ""$uniqueIdSubstring"",
    ""total_amount"": 1000,
    ""description"": ""Compra en HASAR"",
    ""title"": ""Compra en HASAR"",
    ""notification_url"": ""https://typedwebhook.tools/webhook/fab28b4a-60d2-41e5-b3b5-e90bf9cfc903?source_news=ipn"",
   
    ""items"": [
        {
            ""sku_number"": ""serie"",
            ""category"": ""category"",
            ""title"": ""title"",
            ""description"": ""description"",
            ""quantity"": 3,
            ""unit_measure"": ""unit"",
            ""unit_price"": ""500"",
            ""total_amount"": 1500,
            ""currency_id"": ""USDT""
        },
                {
            ""sku_number"": ""serie 2"",
            ""category"": ""category"",
            ""title"": ""title"",
            ""description"": ""description"",
            ""quantity"": 3,
            ""unit_measure"": ""unit"",
            ""unit_price"": ""500"",
            ""total_amount"": 1500,
            ""currency_id"": ""USDT""
        }
    ]
}
",,,,24-04-2024 12:38:02,24-04-2024 12:38:02,0.002s,PASSED
try,,,,24-04-2024 12:38:02,24-04-2024 12:38:04,1.677s,PASSED
,,,,,,,
Test Cases/Flow POS/9.1 auth_token_Admin - Copy,,,,24-04-2024 12:38:04,24-04-2024 12:38:05,0.956s,PASSED
"current_user = ""Hasar""",,,,24-04-2024 12:38:04,24-04-2024 12:38:04,0.001s,PASSED
"response = sendRequest(findTestObject(""Flow Admin/token"", [""url_base"":url_base, ""api_key"":api_key_hasar]))",,,,24-04-2024 12:38:04,24-04-2024 12:38:05,0.929s,PASSED
responseBody = response.getResponseText(),,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.000s,PASSED
print(responseBody),,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.001s,PASSED
jsonSlurper = new groovy.json.JsonSlurper(),,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.000s,PASSED
jsonResponse = jsonSlurper.parseText(responseBody),,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.001s,PASSED
token = accessToken,,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.000s,PASSED
"println(""Response Body: "" + responseBody)",,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.001s,PASSED
,,,,,,,
Test Cases/Flow POS/9.2 Get exchange data order,,,,24-04-2024 12:38:05,24-04-2024 12:38:06,1.041s,PASSED
customer_uuid = customer_uuid,,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.001s,PASSED
pos_uuid = pos_uuid,,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.001s,PASSED
"requestBody = 
{
  ""qrValue"":""Depay:$customer_uuid/$pos_uuid/false""

}
",,,,24-04-2024 12:38:05,24-04-2024 12:38:05,0.002s,PASSED
try,,,,24-04-2024 12:38:05,24-04-2024 12:38:06,0.857s,PASSED
,,,,,,,
Test Cases/Flow POS/9.3 Response Exchange,,,,24-04-2024 12:38:06,24-04-2024 12:38:07,1.218s,FAILED
uniqueId = randomUUID().toString(),,,,24-04-2024 12:38:06,24-04-2024 12:38:06,0.001s,PASSED
"uniqueIdSubstring = replaceAll(""[^a-zA-Z0-9]"", """").substring(0, 10)",,,,24-04-2024 12:38:06,24-04-2024 12:38:06,0.001s,PASSED
customer_uuid = customer_uuid,,,,24-04-2024 12:38:06,24-04-2024 12:38:06,0.005s,PASSED
pos_uuid = pos_uuid,,,,24-04-2024 12:38:06,24-04-2024 12:38:06,0.001s,PASSED
"requestBody = 
{
  ""qrValue"":""Depay:$customer_uuid/$pos_uuid/false""
  ""transaction"": {
    ""wallet_origin"": ""QATest"",
    ""transaction_number"": ""$uniqueIdSubstring"",
    ""amount"":498008,
    ""status"": ""closed""
  }
}
",,,,24-04-2024 12:38:06,24-04-2024 12:38:06,0.009s,PASSED
try,,,,24-04-2024 12:38:06,24-04-2024 12:38:07,0.895s,FAILED
